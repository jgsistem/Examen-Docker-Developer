version: '3.4'

services:
  postgres_server:
    build: ./database/
    image: dockermarvic/mi_postgres:latest
    volumes: 
      - my-data:/var/lib/postgres/
    restart: on-failure
    networks: 
      - backend
    deploy:
     replicas: 1
     resources:
       limits:
         cpus: "0.3"
         memory: 512M
     restart_policy:
       condition: on-failure
     placement:
       constraints: [node.role == worker]

  apimicro1:
    build: ./SpringMicro1/
    image: dockermarvic/micro1:latest
    ports:
      - 8080:8080
    depends_on: 
      - postgres_server
      - apiacceso
    restart: on-failure
    networks: 
      - backend
    deploy:
     replicas: 1
     resources:
       limits:
         cpus: "0.2"
         memory: 512M
     restart_policy:
       condition: on-failure
     placement:
       constraints: [node.role == worker]

  apimicro2:
    build: ./SpringMicro2/
    image: dockermarvic/micro2:latest
    ports:
      - 8081:8081
    depends_on: 
      - postgres_server
      - apiacceso
    restart: on-failure
    networks: 
      - backend
    deploy:
     replicas: 1
     resources:
       limits:
         cpus: "0.2"
         memory: 512M
     restart_policy:
       condition: on-failure
     placement:
       constraints: [node.role == worker]

  apiacceso:
    build: ./SpringAuthServer/
    image: dockermarvic/apiacceso:latest
    environment: 
      - SERVER_SERVLET_CONTEXT_PATH=/acceso
    ports:
      - 9999:9999
    depends_on: 
      - postgres_server
    restart: on-failure
    networks:
      - backend
    deploy:
     replicas: 1
     resources:
       limits:
         cpus: "0.2"
         memory: 512M
     restart_policy:
       condition: on-failure
     placement:
       constraints: [node.role == worker]
      
  proxy:
    build: ./proxy-backend/
    image: dockermarvic/apiproxy:latest
    ports:
      - "80:80"
    depends_on: 
      - apimicro1
      - apimicro2
      - apiacceso
    restart: on-failure
    networks:
      - backend
    deploy:
     replicas: 1
     resources:
       limits:
         cpus: "0.2"
         memory: 256M
     restart_policy:
       condition: on-failure
     placement:
       constraints: [node.role == manager]

  # frontend:
  #   build: ./cineapp-frontend/
  #   image: dockermarvic/cinefrontend:latest
  #   ports:
  #     - 8090:80
  #   networks:
  #     - frontend
    # deploy:
    #  replicas: 1
    #  resources:
    #    limits:
    #      cpus: "0.2"
    #      memory: 256M
    #  restart_policy:
    #    condition: on-failure
    #  placement:
    #    constraints: [node.role == worker]
    

volumes:
  my-data:

networks:
  backend: 
  frontend: